0.为什么要用Redis，而不用数据库？
高性能、高并发（mysql单机支撑2000QPS容易报警，Redis一秒并发量轻松几万十几万）

1.redis数据类型和应用场景
字符串 、散列、列表、集合、有序集合
String、Hash、List、Set、Sorted Set
String 存储单个值，如论坛网站记录登录用户数
Hash  键值对集合，适合存储结构化对象（如加油站对象stationInfo）
List   论坛网站记录登录用户；当队列使用（先进先出）
Set   没有重复的集合，可以做全局去重
Sorted Set 可以做排行榜（如小说网站）

Redis持久化方式（默认为RDB）
	1.RDB：每隔一段时间把内存的数据以快照的形式保存到硬盘
	2.AOF：将每一个写命令都写入一个AOF日志文件中，恢复数据时执行文件中的命令

内存淘汰机制
	定期删除：redis默认每100ms随机抽取检查，有过期key则删除（十分消耗CPU资源）
	惰性删除：取值时检查，如果过期了就会删除。

4.过期策略（有6种）
	allkeys-lru：挑选最近最少使用的数据淘汰（最常用）

5.Redis集群
    1)主从复制：所有机器上数据一样
    2)哨兵模式
    3)分布式：数据分别存储在多台机器上（不同机器数据不同）

6.redis雪崩和穿透
	缓存雪崩：原有缓存失效，直接访问数据库。解决方案：集群做好备份
	缓存穿透：查询数据，数据库没有，自然缓存中也不会有。解决方案：把空结果放进缓存，设置一个很短的过期时间

Redis并发竞争解决方案（假如有某个key = "price"，  value值为10，现在想把value值进行+10操作）
	对于公共资源争夺解决方案通常是加锁




