A.hibernate mybatis 区别
1.Hibernate完全实现了对JDBC的封装,Hibernate实现了POJO 和数据库表之间的映射，不需要自己写sql，由框架自动生成。ibatis是对JDBC的半封装，需要自己写sql,写在配置文件里面
2.Hibernate数据库移植性很好，MyBatis对于不同的数据库需要重写SQL。
3.如果对性能要求高，需要高度优化的SQL语句，iBATIS会有更好的可控性和表现。


Hibernate优点
1.不需要编写SQL语句，只需要操作对象
2.数据库移植性很好，更换数据库时，只需要更改配置文件
3.

Hibernate缺点
终极的缺点还是性能
1.由于对持久层封装过于完整，导致开发人员无法对SQL进行优化
2.Hibernate在批量数据处理时效果不好，对于批量的修改，删除，不适合用Hibernate


Hibernate对象的三种状态
临时状态:普通对象，不和数据库有任何关联关系.save()或saveOrUpdate()方法将其变为持久态
持久状态:与数据库中记录关联;事务提交时，会同步提交持久化对象的变更。delete()方法将其变为临时状态
游离状态:有数据库相关记录,但不在Session管理之下.

Load()与 Get()的区别
load返回的是一个代理(此代理中只有一个id属性), 延迟加载；get直接加载
get方法只能使用一级缓存。而load可以使用一级和二级缓存。

Hibernate的缓存机制是怎么样的?
    以ID为key的Map来实现对对象的缓存。
根据ID访问数据对象的时候，首先会从Session一级缓存中查找，如果查不到并且配置了二级缓存，那么会从二级缓存中查找，如果还查不到，就会查询数据库，把结果按照ID放入到缓存中。

一级缓存（Session级别）
缓存只由同一session中的操作共享

一级缓存是以实体对象为单位进行存储的
在访问的时候用ID进行查询，会先在缓存中查找；如果以其它属性查找，则直接访问数据库
二级缓存（SessionFactory级别）
由于SessionFactory对象的生命周期和应用程序的整个过程对应，因此Hibernate二级缓存是进程范围或者集群范围的缓存，有可能出现并发问题，因此需要采用适当的并发访问策略，该策略为被缓存的数据提供了事务隔离级别。第二级缓存是可选的，在默认情况下，SessionFactory不会被启用。