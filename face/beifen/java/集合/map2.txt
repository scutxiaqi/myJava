HashMap原理
	HashMap是一个键值对集合，底层数据结构是数组、链表和红黑树。
当添加元素时
	1.如果map是空的，会初始化map，创建长度为16的数组。
	2.计算键值key的hash值并确定元素要存放在数组中的槽位
	3.插入到链表或红黑树中。如果key存在，直接覆盖；
	    如果链表长度大于8并且数组长度大于等于64，转化为红黑树，数组长度小于 64，直接扩容
	4.判断元素个数是否超过临界值threshold，如果超过，进行扩容

HashMap在什么条件下扩容?
	1.元素个数超过临界值 2. 链表长度大于8并且数组长度小于64
扩容过程
	1.新建数组：如果map为空，初始化map；否则容量扩大一倍
	2.将元素移动到新数组中
   		(1)该位置只有一个元素，直接移动
   		(2)如果是链表，移动到新数组还是链表
    		(3)如果是树，移动后如果节点个数小于等于6，退化为链表